{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "ignorePatterns": ["dist/*", "node_modules/*"],
  "settings": {
    "import/resolver": {
      "typescript": {}
    },
    "react": {
      "version": "detect"
    }
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended",
    "plugin:eslint-comments/recommended",
    //"prettier/@typescript-eslint",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "max-len": [
      "error",
      100,
      {
        "ignoreTrailingComments": true,
        "ignoreComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreRegExpLiterals": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],

    // sometimes it is better
    "no-nested-ternary": "off",

    // controlled with prettier
    "arrow-parens": "off",
    "function-paren-newline": "off",
    "react/jsx-curly-newline": "off",

    "react/display-name": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error"],
    "@typescript-eslint/no-var-requires": "off",
    "react/prop-types": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",

    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",

    // just the formatting issues, prettier does all the job
    "react/jsx-wrap-multilines": "off",
    "no-confusing-arrow": "off",
    "operator-linebreak": "off",
    "object-curly-newline": "off",
    "implicit-arrow-linebreak": "off",
    "spaced-comment": "off",
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "ignore"
      }
    ],

    // these are totally useless
    "no-underscore-dangle": "off",
    "class-methods-use-this": "off",
    "react/state-in-constructor": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/static-property-placement": "off",
    "react/require-default-props": "off",
    "react/destructuring-assignment": "off",
    "react/sort-comp": "off",
    "react/no-danger": "off",
    "jsx-a11y/control-has-associated-label": "off",
    "jsx-a11y/mouse-events-have-key-events": "off",
    "import/prefer-default-export": "off",
    // "import/order": [
    //   "error",
    //   {
    //     "groups": ["builtin", "external", "internal"],
    //     "pathGroups": [
    //       {
    //         "pattern": "react",
    //         "group": "external",
    //         "position": "before"
    //       }
    //     ],
    //     "pathGroupsExcludedImportTypes": ["react"],
    //     // "newlines-between": "always",
    //     "alphabetize": {
    //       "order": "asc",
    //       "caseInsensitive": true
    //     }
    //   }
    // ],
    // sometimes there is no alternative
    "react/no-array-index-key": "off",

    // does not matter for monorepo
    "import/no-extraneous-dependencies": "off",

    // rules are broken and provide falsy mistakes
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/anchor-is-valid": "off",

    // it does not spoil anything if used wisely
    "jsx-a11y/no-autofocus": "off"
  }
}
